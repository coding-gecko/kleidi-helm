global:
  # -- Global image pull policy.  
  imagePullPolicy: Always
  # -- Namespace should stay kube-system.
  namespace: kube-system
  # -- Registry to fetch images from. Can be locally overwritten.
  registry: ghcr.io
  # -- Determines the use of SoftHSM provider. If set to true, SoftHSM is deployed instead of Vault provider.
  softHsm: false

# -- Enable debug mode
debug: false

# -- The security context for pods. Used both in Deployment and DaemonSet.
podSecurityContext:
  runAsUser: 0
  runAsGroup: 0
  fsGroup: 0

# -- The security context for containers. Used both in Deployment and DaemonSet.
containerSecurityContext:
  allowPrivilegeEscalation: true

tls:
  # -- Enables/Disables TLS between Kleidi and Vault
  enabled: false
  # -- Vault CA chain secret name - you need to create it manually.
  # Secret should be present in the same namespace as Kleidi.
  secretName: vault-ca
  # -- Key name inside secret.
  keyName: cafile

rbac:
  # -- Create role bindings. Should be set to true.
  create: true
  # -- Preserves Role Bindings after "helm uninstall". It adds annotation "helm.sh/resource-policy: "keep"". Role Bindings survive "helm uninstall".
  keepRB: false
  # -- Annotations for Role Bindings.
  annotations: {}

# -- Use host network. Used both in Deployment and DaemonSet.
hostNetwork: true

serviceAccount:
  # -- Enables/disables the creation of ServiceAccount.
  create: true
  # -- Preserves ServiceAccount after "helm uninstall". It adds annotation "helm.sh/resource-policy: "keep"". ServiceAccount survives "helm uninstall".
  keepSA: true
  # -- Name of the ServiceAccount.
  name: kleidi-vault-auth
  # -- ImagePullSecrets for ServiceAccount.
  imagePullSecrets: []
  # -- annotations for ServiceAccount.
  annotations: {}

# -- Name of the PriorityClass. Used both in Deployment and DaemonSet.
priorityClassName: system-cluster-critical
# -- Host aliases. Used both in Deployment and DaemonSet.
hostAliases: {}

daemonset:
  # -- Deploys kleidi as DaemonSet.If this enabled, set "deployment.enabled" to false.
  enabled: true
  # -- Update Strategy for DaemonSet.
  updateStrategy:
    type: RollingUpdate

deployment:
  # -- Deploys kleidi as deployment. If this enabled, set "daemonset.enabled" to false.
  enabled: false
  # -- Replica count for pods.
  replicaCount: 1

  kleidiKmsInit:
    # -- Image name for init container.
    image: beezy-dev/kleidi-kms-init
    # -- Override global registry for init container.
    registry: null
    # -- Tag for init container.
    tag: hsm-b5f665d

    config:
      # -- Token label for init container. Can be same as container name.
      tokenLabel: kleidi-kms-plugin
      # -- HSM pin for init container.
      pin: "1234"
      # -- Library to use for HSM inside init container.
      path: /usr/lib64/softhsm/libsofthsm.so

  kleidiKmsPlugin:
    # -- Image name for KMS plugin container.
    image: beezy-dev/kleidi-kms-plugin
    # -- Override global for KMS plugin container.
    registry: null
    # -- Image tag for KMS plugin container.
    tag: vault-b5f665d
    # tag: hsm-b5f665d

    # -- Socket for kleidi to listen on.
    kleidiSock: unix:///tmp/kleidi/kleidi-kms-plugin.sock

    config:
      # -- Vault Enterprise namespace.
      namespace: ""
      # -- Name of Transit Key used in Vault.
      transitkey: kleidi
      # -- Role name in Vault.
      vaultrole: kleidi
      # -- Address of Vault.
      address: http://127.0.0.1:8200

    # -- Extra environment values for KMS plugin container.
    extraEnv: []

  # -- Update strategy.
  strategy:
      type: RollingUpdate

# -- Resource requests and limits. Used both in Deployment and DaemonSet.
resources:
  limits:
    cpu: 300m
    memory: 256Mi

# -- Annotations. Used both in Deployment and DaemonSet.
annotations: {}


# -- Affinity. Used both in Deployment and DaemonSet.
# @default -- Affinity settings, defaults added.
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/control-plane
            operator: Exists

# -- Tolerations. Used both in Deployment and DaemonSet.
# @default -- Toleration settings, defaults added.
tolerations:
  - key: node-role.kubernetes.io/control-plane
    operator: Exists
    effect: NoSchedule
  - key: node-role.kubernetes.io/etcd
    operator: Exists
    effect: NoExecute

# -- NodeSelector(s). Used both in Deployment and DaemonSet.
nodeSelector: {}

# -- Extra volumes if needed. Used both in Deployment and DaemonSet.
extraVolumes: {}

# -- Extra volume mounts if needed. Used both in Deployment and DaemonSet.
extraVolumeMounts: {}
